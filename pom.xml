<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>top.ysqorz</groupId>
	<artifactId>forum</artifactId>
	<version>v1.0</version>
	<!-- 打包方式为war包	-->
	<packaging>jar</packaging>
	<name>forum</name>
	<description>旨在打造一个功能齐全的论坛。It is not a small project!</description>

	<properties>
		<java.version>1.8</java.version>
		<guava.version>19.0</guava.version>
        <netty.version>4.1.50.Final</netty.version>
		<!-- 版本过高，连接时会出现两次报错，然后才连接成功 -->
		<curator.version>5.0.0</curator.version>
		<mybatis.version>2.1.4</mybatis.version>
		<!--	使用1.1.10，datetime转LocalDatetime会报错java.sql.SQLFeatureNotSupportedException: null
			原因是不支持将数据库的datetime类型转成localDateTime
			https://blog.csdn.net/sinat_14977855/article/details/104042952-->
		<druid.version>1.1.21</druid.version>
		<tk-mapper.version>2.1.5</tk-mapper.version>
		<jwt.version>3.3.0</jwt.version>
		<pagehelper.version>1.2.13</pagehelper.version>
		<zxing.version>3.3.3</zxing.version>
		<aliyun-oss.version>3.11.2</aliyun-oss.version>
		<thumbnailator.version>0.4.8</thumbnailator.version>
		<shiro.version>1.7.0</shiro.version>
		<okhttp.version>3.14.2</okhttp.version>
		<jsoup.version>1.14.2</jsoup.version>
		<hutool.version>5.8.8</hutool.version>
	</properties>

	<dependencies>
		<!-- hutool工具包 -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>
		<!-- 本地缓存需要 -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.curator/curator-recipes -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>${curator.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>${netty.version}</version>
        </dependency>
		<!-- thymeleaf模板引擎 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- web模块 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- 用户controller层中vo对象的参数校验，不通过会抛出异常。通过全局异常配置进行
        统一捕获返回给前端 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- pagehelper分页插件 https://github.com/pagehelper/Mybatis-PageHelper -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>${pagehelper.version}</version>
		</dependency>
		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<!--    通用Mapper，简化mybatis书写
        Github及使用文档：https://github.com/abel533/Mapper/
        如果不在这里引用，生成的pojo里面的注解会报错，因为没有引入javax.persistence -->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
			<version>${tk-mapper.version}</version>
		</dependency>
		<!-- druid的官方整合包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.version}</version>
		</dependency>
		<!-- mysql驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- mysql驱动 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<!-- 只在本模块中引入，不会传递到子模块中，除非显示引入 -->
			<optional>true</optional>
		</dependency>
		<!-- redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- Redis连接池Lettuce：https://blog.csdn.net/zzhongcy/article/details/102584028/ -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		<!-- jwt https://jwt.io/ -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${jwt.version}</version>
		</dependency>
		<!-- ZXing 二维码 -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>${zxing.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>${zxing.version}</version>
		</dependency>
		<!-- 阿里云oss	-->
		<dependency>
			<groupId>com.aliyun.oss</groupId>
			<artifactId>aliyun-sdk-oss</artifactId>
			<version>${aliyun-oss.version}</version>
		</dependency>
		<!-- 图像处理：https://mvnrepository.com/artifact/net.coobird/thumbnailator -->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>${thumbnailator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!--shiro-->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring-boot-web-starter</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- okhttp -->
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${okhttp.version}</version>
		</dependency>
		<!--jsoup处理html富文本-->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--
                mybatis逆向工程插件
               用maven mybatis插件如果不在plugin里面添加依赖包得引用的话，会找不到相关得jar包，
               在plugin外部得jar包，他不会去找到并执行，所以要把plugin运行依赖得jar配置都放在里面
            -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.7</version>
				<configuration>
					<configurationFile>src/main/resources/mybatis/generatorConfig.xml</configurationFile>
					<!-- 谨慎设置为true，小心重新生成覆盖导致xml中自己写的sql语句全部没有了 -->
					<overwrite>false</overwrite>
					<verbose>true</verbose>
				</configuration>
				<dependencies>
					<!-- 所需依赖 -->
					<!-- Mybatis Generator -->
					<dependency>
						<groupId>org.mybatis.generator</groupId>
						<artifactId>mybatis-generator-core</artifactId>
						<version>1.3.7</version>
						<scope>compile</scope>
						<optional>true</optional>
					</dependency>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<!-- 5.7及其以下 -->
						<version>5.1.6</version>
						<!-- 8.0及其以上。数据库版本和驱动包一定要对应，否则自动生成时会报错 -->
						<!--                        <version>8.0.16</version>-->
					</dependency>
					<dependency>
						<groupId>tk.mybatis</groupId>
						<artifactId>mapper</artifactId>
						<version>4.1.5</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<!--打包成可执行jar-->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
