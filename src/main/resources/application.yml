
spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  datasource:
    url: jdbc:mysql://localhost:3306/forum?serverTimezone=Asia/Shanghai&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: ysqJYKL2010
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5   # 初始化连接数
      min-idle: 5   # 最小空闲连接数
      max-active: 20    # 最大活跃连接数
      max-wait: 60000   # 获取连接等待超时的时间
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置监控服务器 http://127.0.0.1:8080/druid
      stat-view-servlet:
        # 1.1.10以后的版本需要指定为true 不然默认是关闭的就会出现404
        enabled: true
        login-username: admin
        login-password: 123456
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        #allow:
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        url-pattern: /*   # 添加过滤规则
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"   # 忽略过滤格式
  mvc:

    format:
      date-time: yyyy-MM-dd HH:mm:ss
#    multipart:
#      enabled: true   # 默认为 true 即允许附件上传
#      # 限定了当上传的文件超过定长度时，就先写到临时文件里
#      # 这有助于上传文件不占用过多的内存，单位是 MB 或者。默认是 即不限定阔值
#      file-size-threshold: 128KB
#      # location 指的是临时文件的存放目录，如果不设定，则是服务器提供的一个临时目录
#      # location:
#      max-file-size: 100MB    # 单个文件的最大长度，默认是 MB
#      max-request-size: 125MB     # 单次 HTTP 请求上传的最大长度
    static-path-pattern: /**
  redis:
    host: 119.45.164.115
    port: 6379
    password: ysqJYKL2010
    database: 0
    lettuce:
      pool:
        max-active: 32  # 连接池连接的最大数量。-1表示没有限制
        max-wait: -1    # 连接池阻塞的最大的等待时间。-1表示一直等待
        max-idle: 20    # 连接池空闲连接的最大数量
        min-idle: 3     # 连接池空闲连接的最小数量
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    # GMT就是格林威治标bai准时间的英文缩写(GreenwichMeanTime格林尼治标准时间)
    # GMT+8是东八区的意思，其时间比du格林zhi威治时间早8个小dao时
    time-zone: GMT+8
    parser:
      #允许出现特殊字符和转义符
      allow_unquoted_control_chars: true
      #允许出现单引号
      allow_single_quotes: true
  thymeleaf:
    # 开发时关闭缓存
    cache: false


mybatis:
  # xxMapper.xml文件在resources/mybatis/mapper下
  mapper-locations: classpath:mybatis/mapper/*.xml
  # 与数据库表对应的po类所在的包，配置之后可以直接在xml中写类命
  type-aliases-package: top.ysqorz.forum.po
  configuration:
    # 将数据库表的带下划线字段转成java中的驼峰命名
    map-underscore-to-camel-case: true
    # 增加sql语句打印，用于本地开发测试
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 分页插件
pagehelper:
  helper-dialect: mysql
  #  params: =count=countSql
  # 分页参数的合理化，默认值为false。
  # 当此参数设置为时true， pageNum <= 0将查询第一页 PageNum> pages（超过总数），将查询最后一页
  reasonable: true
  support-methods-arguments: true

server:
  # 报错信息
  error:
    include-exception: true
    include-message: always
    include-stacktrace: always
    include-binding-errors: always

# 自定义配置
upload:
  repository:
    aliyun-oss:
      access-key-id: "LTAI4GFvPgPakyd9rT7ahbXf"
      access-key-secret: "jd3QMuwTmRxZCP77NCnKW5Q2arWfUo"
      bucket-name: "webchat-ysq"
      domain-name: "https://webchat-ysq.oss-cn-shenzhen.aliyuncs.com"
      end-point: "https://oss-cn-shenzhen.aliyuncs.com"

oauth:
  gitee:
    client-id: d9b72e60aef218352f09dd3ef1841be3546fa31421820ef0a7966ea64a0d9ab3
    client-secret: 448546ccd502b7dc0586e6043fa06bc31bf5f5cf8cf1090da5c601c731c09503
    redirect-uri: http://localhost:8080/user/oauth/gitee/callback
    po-field: giteeId
  qq:
    client-id: 101956139
    client-secret: e7f7f114f2b972db18476198e64d71ab
    redirect-uri: https://www.ysqorz.top/index.php
    po-field: qqId
  baidu:
    client-id: MKnePFb5rDNxqn7GQagBI01VI3oOWEhj
    client-secret: lK6dX6kQGcF9mqDuf9o7DN8q0iDBPsD9
    redirect-uri: http://localhost:8080/user/oauth/baidu/callback
    po-field: baiduId
