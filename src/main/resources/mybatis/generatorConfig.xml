<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包  C:\Users\wang\.m2\repository\mysql\mysql-connector-java\8.0.13\mysql-connector-java-8.0.13.jar C:\Users\wang\.m2\repository\mysql\mysql-connector-java\5.1.30\mysql-connector-java-5.1.30.jar-->
    <!-- 如果不想使用这种绝对路径的方式，则在插件配置处，直接配置依赖   -->
    <!-- <classPathEntry  location="C:\Users\wang\.m2\repository\mysql\mysql-connector-java\8.0.13\mysql-connector-java-8.0.13.jar"/>-->
    <!--
    context:生成一组对象的环境
    id:必选，上下文id，用于在生成错误时提示
    defaultModelType:指定生成对象的样式
        1，conditional：类似hierarchical；
        2，flat：所有内容（主键，blob）等全部生成在一个对象中；
        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
    targetRuntime:
        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
    introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!--
        caseSensitive 是否区分大小写，默认值 false。如果数据库区分大小写，这里就需要配置为 true，这样当表名为 USER 时，会生成 @Table(name = "USER") 注解，否则使用小写 user 时会找不到表。
        forceAnnotation 是否强制生成注解，默认 false，如果设置为 true，不管数据库名和字段名是否一致，都会生成注解（包含 @Table 和 @Column）。
        beginningDelimiter 和 endingDelimiter 开始和结束分隔符，对于有关键字的情况下适用。
        useMapperCommentGenerator 是否使用通用 Mapper 提供的注释工具，默认 true 使用，这样在生成代码时会包含字段的注释（目前只有 mysql 和 oracle 支持），设置 false 后会用默认的，或者你可以配置自己的注释插件。
        generateColumnConsts 在生成的 model中，增加字段名的常量，便于使用 Example 拼接查询条件的时候使用。
        lombok 增加 model 代码生成时，可以直接生成 lombok 的 @Getter@Setter@ToString@Accessors(chain = true) 四类注解， 使用者在插件配置项中增加 <property name="lombok" value="Getter,Setter,ToString,Accessors"/> 即可生成对应包含注解的 model 类。
        -->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="top.ysqorz.forum.common.BaseMapper"/>
            <!--<property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>-->
            <property name="caseSensitive" value="true"/>
            <property name="lombok" value="Getter,Setter,Accessors,EqualsAndHashCode"/>
        </plugin>

        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/forum?characterEncoding=utf-8&amp;useSSL=false"
                        userId="root"
                        password="ysqJYKL2010">
        </jdbcConnection>

        <javaTypeResolver>
            <!--
             true：使用BigDecimal对应decimal(小数)和 numeric(数字)数据类型
             false：默认,
                 scale>0;length>18：使用BigDecimal;
                 scale=0;length[10,18]：使用Long；
                 scale=0;length[5,9]：使用Integer；
                 scale=0;length<5：使用Short；
              -->
            <property name="forceBigDecimals" value="true"/>
            <!-- This property is used to specify whether MyBatis Generator should force the use of JSR-310 data types for DATE, TIME,
            and TIMESTAMP fields, rather than using java.util.Date -->
            <property name="useJSR310Types" value="true"/>
        </javaTypeResolver>

        <!-- java模型创建器，是必须要的元素
         负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
         targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
         targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
        -->
        <javaModelGenerator targetPackage="top.ysqorz.forum.po" targetProject="src/main/java">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="false"/>
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>

        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="mybatis.mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置-->
        <javaClientGenerator  type="XMLMAPPER" targetPackage="top.ysqorz.forum.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <!--
          enableInsert（默认true）：指定是否生成insert语句；
          enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；
          enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；
          enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；
          enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；
          enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；
          enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；
          enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；
        -->
<!--        <table tableName="fs"  domainObjectName="FS" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <!-- 谨慎【覆盖】，小心重新生成覆盖导致xml中自己写的sql语句全部没有了 -->
<!--        <table tableName="chat_msg"/>-->

<!--        <table tableName="blacklist" />-->
<!--        <table tableName="collect" />-->
<!--        <table tableName="comment_notification" />-->
<!--        <table tableName="first_comment" />-->
<!--        <table tableName="follow" />-->
<!--        <table tableName="follow_notification" />-->
<!--        <table tableName="label" />-->
<!--        <table tableName="like" />-->
<!--        <table tableName="points_record" />-->
<!--        <table tableName="points_type" />-->
<!--        <table tableName="post" />-->
<!--        <table tableName="post_label" />-->
<!--        <table tableName="resource" />-->
<!--        <table tableName="role" />-->
<!--        <table tableName="role_resource" />-->
<!--        <table tableName="second_comment" />-->
<!--        <table tableName="system_config" />-->
<!--        <table tableName="system_notification" />-->
<!--        <table tableName="topic" />-->
<!--        <table tableName="user" />-->
        <!--        <table tableName="attendance" />-->
        <table tableName="danmu_msg"/>

    </context>

</generatorConfiguration>
